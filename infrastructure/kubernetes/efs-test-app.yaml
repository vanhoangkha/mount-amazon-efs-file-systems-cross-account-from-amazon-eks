apiVersion: v1
kind: Namespace
metadata:
  name: efs-test
  labels:
    name: efs-test
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-corebank-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: ${EFS_COREBANK_ID}
  accessPoint: ${SATELLITE_ACCESS_POINT}
  directoryPerms: "0755"
  gidRangeStart: "1001"
  gidRangeEnd: "2000"
  basePath: "/satellite"
mountOptions:
  - nfsvers=4.1
  - rsize=1048576
  - wsize=1048576
  - hard
  - intr
  - timeo=600
  - retrans=2
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-corebank-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-corebank-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: ${EFS_VOLUME_HANDLE}
    volumeAttributes:
      encryptInTransit: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-corebank-pvc
  namespace: efs-test
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-corebank-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: efs-test-sa
  namespace: efs-test
  annotations:
    eks.amazonaws.com/role-arn: ${EFS_CROSS_ACCOUNT_ROLE_ARN}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: efs-test-app
  namespace: efs-test
  labels:
    app: efs-test-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: efs-test-app
  template:
    metadata:
      labels:
        app: efs-test-app
    spec:
      serviceAccountName: efs-test-sa
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: efs-test-app
          image: ${ECR_REPOSITORY_URI}:latest
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: COREBANK_EFS_PATH
              value: "/mnt/efs-corebank"
            - name: APP_NAME
              value: "efs-test-app"
            - name: AWS_REGION
              value: "${AWS_REGION}"
          volumeMounts:
            - name: efs-corebank-storage
              mountPath: /mnt/efs-corebank
              mountPropagation: None
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
      volumes:
        - name: efs-corebank-storage
          persistentVolumeClaim:
            claimName: efs-corebank-pvc
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - efs-test-app
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: efs-test-service
  namespace: efs-test
  labels:
    app: efs-test-app
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: efs-test-app
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: efs-test-hpa
  namespace: efs-test
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: efs-test-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
